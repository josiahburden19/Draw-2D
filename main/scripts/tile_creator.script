function init(self)
	self.selected_colour = {1, 'white'}
	self.mouse_pos = vmath.vector3(1, 1, 0)
	self.can_draw = true
	self.saving_loading = false
	msg.post('.', 'acquire_input_focus')
end

function on_message(self, message_id, message, sender)
	if message_id == hash('selected_colour') then
		self.selected_colour = message
	end
	if message_id == hash('enable_drawing') then
		self.can_draw = true
	elseif message_id == hash('disable_drawing') then
		self.can_draw = false
	end
	if message_id == hash('saving_loading_toggle') then
		self.saving_loading = not self.saving_loading
		self.down = false
	end
end

function on_input(self, action_id, action)
	if not self.saving_loading then
		if action_id == hash('touch') and action.pressed then
			self.down = true
		elseif action_id == hash('touch') and action.released then
			self.down = false
		end
		if self.selected_colour ~= nil and self.down and self.can_draw then
			local current_coordinates = vmath.vector3(action.x, action.y, 0)
			local old_coordinates = current_coordinates - (vmath.vector3(action.dx, action.dy, 0))
			local direction = vmath.normalize(current_coordinates - old_coordinates)
			local length = vmath.length(current_coordinates - old_coordinates)
			local new_action = vmath.vector3(math.ceil(action.x/20), math.ceil(action.y/20), 0)
			if length <= 20 and (new_action.x >= 2) and (new_action.x <= 47) and (new_action.y >= 2) and (new_action.y <= 31)then
				tilemap.set_tile('#block_main', 'main', new_action.x, new_action.y, self.selected_colour[1])
			else
				for i=0, math.ceil(length/20), 1 do
					local x = math.ceil(((20 * direction.x * i) + old_coordinates.x)/20)
					local y = math.ceil(((20 * direction.y * i) + old_coordinates.y)/20)
					if (x >= 2) and (x <= 47) and (y >= 2) and (y <= 31) then
						tilemap.set_tile('#block_main', 'main', x , y, self.selected_colour[1])
					end
				end
			end
		end
	end
end